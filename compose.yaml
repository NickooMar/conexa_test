version: "3.8"

services:
  mongodb:
    image: mongo:latest
    container_name: conexa_mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 12345678
      MONGO_INITDB_DATABASE: conexa
    command:
      - "--logpath"
      - "/var/log/mongodb/mongod.log"
    ports:
      - 27017:27017
    volumes:
      - ./docker/mongodb_data:/data/db
      - ./docker/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    environment:
      NODE_ENV: development
      PORT: 3000
      JWT_SECRET: secret
      JWT_EXPIRES_IN: 1d
      AUTH_SERVICE_HOST: auth
      AUTH_SERVICE_PORT: 3001
      CLIENT_BACKEND_HOST: client-backend
      CLIENT_BACKEND_TCP_PORT: 3002
      MONGO_HOST: mongodb
      MONGO_PORT: 27017
      MONGO_DATABASE: conexa
      MONGO_DB: conexa
      MONGO_SSL: "false"
    depends_on:
      - mongodb
    ports:
      - "3000:3000"

  client-backend:
    build:
      context: ./client-backend
      dockerfile: Dockerfile
    environment:
      NODE_ENV: development
      CLIENT_BACKEND_TCP_PORT: 3002
      CLIENT_BACKEND_HTTP_PORT: 3003
      CLIENT_BACKEND_HOST: client-backend
      JWT_SECRET: secret
      JWT_EXPIRES_IN: 1d
      MONGO_HOST: mongodb
      MONGO_PORT: 27017
      MONGO_DATABASE: conexa
      MONGO_DB: conexa
      MONGO_SSL: "false"
    depends_on:
      - mongodb
    ports:
      - "3003:3003"

  auth:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    environment:
      NODE_ENV: development
      SERVICE_NAME: auth-service
      AUTH_SERVICE_PORT: 3001
      AUTH_SERVICE_HOST: auth
      JWT_SECRET: secret
      JWT_EXPIRES_IN: 1d
      API_GATEWAY_SERVICE_HOST: api-gateway
      API_GATEWAY_SERVICE_PORT: 3000
      MONGO_HOST: mongodb
      MONGO_PORT: 27017
      MONGO_DATABASE: conexa
      MONGO_DB: conexa
      MONGO_SSL: "false"
    ports:
      - "3001:3001"
    depends_on:
      - mongodb